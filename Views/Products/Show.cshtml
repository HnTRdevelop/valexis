@model Product
@{
    ViewBag.Title = Model.Name;
    ViewBag.Keywords = Model.MetaKeywords;

    string[] images = Model.ImageLink.Split("#@#");
}

<div>
    <h1 class="name">
        @Model.Name
    </h1>
    @if (!Model.Category.Contains(Product.categories.IndexOf("кухни").ToString()))
    {
        <h1 class="price">
            @Model.Price.ToString("N0") ₽
        </h1>
    }

    <div class="slideshow-container image fit">
        @foreach(string img in images)
        {
            <div class="mySlides">
                <img src="~/images/products/@img">
            </div>
        }

        <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
        <a class="next" onclick="plusSlides(1)">&#10095;</a>
    </div>

    @*<button>В корзину</button>*@
</div>

<div>
    @Html.Raw(Model.Description);
</div>



<script>
    let slideIndex = 1;
showSlides(slideIndex);

// Next/previous controls
function plusSlides(n) {
  showSlides(slideIndex += n);
}

// Thumbnail image controls
function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides(n) {
  let i;
  let slides = document.getElementsByClassName("mySlides");
  let dots = document.getElementsByClassName("dot");
  if (n > slides.length) {slideIndex = 1}
  if (n < 1) {slideIndex = slides.length}
  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block";
  dots[slideIndex-1].className += " active";
}
</script>